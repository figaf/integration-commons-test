plugins {
    id 'java-library'
    id 'maven-publish'
}

group = 'com.github.figaf'
version = '2.0'

ext {
    enableSnapshotsForDependencyResolutionAndPublishing = project.findProperty('enableSnapshots') ?: 'false'
    snapshotsRepoUrl = project.findProperty('snapshotsRepoUrl') ?: ''
    snapshotsRepoUsername = project.findProperty('snapshotsRepoUsername') ?: ''
    snapshotsRepoPassword = project.findProperty('snapshotsRepoPassword') ?: ''

    lombokVersion = '1.18.34'
    jUnitVersion = "5.11.0"
    mockitoVersion = "5.13.0"
    assertjVersion = "3.26.3"
    logbackVersion = "1.5.7"
    hamcrestVersion = "2.2"
    integrationCommonsVersion = '2.0'
}

repositories {
    mavenLocal()
    mavenCentral()
    if (enableSnapshotsForDependencyResolutionAndPublishing == 'true') {
        maven {
            url "$snapshotsRepoUrl/content/groups/public/"
            allowInsecureProtocol true
            credentials {
                username "$snapshotsRepoUsername"
                password "$snapshotsRepoPassword"
            }
        }
    }
    maven { url "https://jitpack.io" }
}

dependencies {
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    api "com.github.figaf:integration-commons:${integrationCommonsVersion}"
    api "org.junit.jupiter:junit-jupiter:${jUnitVersion}"
    api "org.mockito:mockito-core:${mockitoVersion}"
    api "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    api "org.assertj:assertj-core:${assertjVersion}"
    api "org.hamcrest:hamcrest:${hamcrestVersion}"
    api "ch.qos.logback:logback-classic:${logbackVersion}"
}

configurations.configureEach {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            def snapshotsRepoUrl = "$snapshotsRepoUrl/content/repositories/snapshots"
            url snapshotsRepoUrl
            allowInsecureProtocol true
            credentials {
                username snapshotsRepoUsername
                password snapshotsRepoPassword
            }
        }
    }
}

tasks.withType(PublishToMavenRepository).configureEach {
    doFirst {
        if (enableSnapshotsForDependencyResolutionAndPublishing != 'true') {
            throw new GradleException("It's not possible to perform publishing because property 'enableSnapshots' " +
                    "is not configured or set to 'false'")
        }
        // Prevent release publishing
        if (!version.endsWith("-SNAPSHOT")) {
            throw new GradleException("Release publishing is not allowed, it's done by JitPack")
        }
    }
}